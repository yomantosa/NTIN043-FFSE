mod AUTONOMOUS-CAR is
  protecting STRING .

  sorts SensorData Object Action State Component PriorityQueue .

  subsort PriorityQueue < Action .

  ops GPS Camera Radar Lidar TrafficSignal SpeedLimit : -> SensorData .

  ops Lane Obstacle Vehicle Pedestrian GreenLight RedLight StopSign Collision : -> Object .

  ops KeepSpeed Accelerate Decelerate Stop TurnLeft TurnRight AdjustSpeed Override : -> Action .
  ops EmergencyBrake HandleCollision CombinedAction : -> Action .

  ops Active Manual Emergency : -> State .

  ops engine brake wheels lights : -> Component .

  vars O1 O2 : Object .
  vars A B : Action .
  vars S : State .
  vars C : Component .
  var Msg : String .

  op process : SensorData -> Object .
  op decide : Object State -> String .
  op execute : PriorityQueue Component -> String .
  op combine : PriorityQueue PriorityQueue -> PriorityQueue .
  op prioritize : Object Object -> Object .
  op reportWrongState : String -> String .

  eq process(GPS) = Lane .
  eq process(Camera) = Pedestrian .
  eq process(Radar) = Vehicle .
  eq process(Lidar) = Obstacle .
  eq process(TrafficSignal) = RedLight .
  eq process(SpeedLimit) = Lane .

  eq prioritize(O1, O2) = 
    if O1 == Pedestrian or O1 == Obstacle 
    then O1 
    else O2 
    fi .

  eq decide(O1, Active) =
    if O1 == Pedestrian 
    then "Car is stopping due to pedestrian detection."
    else if O1 == Obstacle 
        then "Emergency brake activated due to obstacle."
        else if O1 == RedLight 
              then "Car is stopping at the red light."
              else "Car is maintaining speed."
        fi 
    fi 
  fi .

  eq decide(O1, Emergency) =
    if O1 == Collision 
    then "Car is handling a collision."
    else "Emergency brake activated."
    fi .

  eq decide(O1, Manual) = "Driver override: manual control enabled." .

  eq combine(A, B) = 
    if A == Stop or B == Stop 
    then Stop 
    else if A == EmergencyBrake or B == EmergencyBrake 
         then EmergencyBrake 
         else A 
         fi 
    fi .


  eq execute(A, C) =
    if A == Stop and C == brake 
    then "Car is stopping using brakes."
    else if A == EmergencyBrake and C == brake 
         then "Emergency brake applied."
         else if A == KeepSpeed and C == engine 
              then "Maintaining current speed."
              else if A == TurnLeft and C == wheels 
                   then "Turning left using wheels."
                   else if A == HandleCollision and C == lights 
                        then "Activating hazard lights for collision."
                        else if A == Stop and C == engine
                          then "Car has Shut off"
                            else reportWrongState("Invalid action-component combination.")
                            fi
                        fi 
                   fi 
              fi 
         fi 
    fi .

  eq reportWrongState(Msg) = "Error: " + Msg .
endm


fmod Test